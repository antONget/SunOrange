from aiogram.types import KeyboardButton, ReplyKeyboardMarkup, Message
from aiogram.fsm.context import FSMContext
from aiogram import Bot
from filter.filter import validate_russian_phone_number
import logging


def keyboards_get_contact() -> ReplyKeyboardMarkup:
    logging.info("keyboards_get_contact")
    button_1 = KeyboardButton(text='–û—Ç–ø—Ä–∞–≤–∏—Ç—å —Å–≤–æ–π –∫–æ–Ω—Ç–∞–∫—Ç ‚òéÔ∏è',
                              request_contact=True)
    keyboard = ReplyKeyboardMarkup(
        keyboard=[[button_1]],
        resize_keyboard=True
    )
    return keyboard


async def request_contact(message: Message, state: FSMContext, bot: Bot) -> None:
    """
    –ü–æ–ª—É—á–∞–µ–º –ª–∏—Ü–µ–≤–æ–π —Å—á–µ—Ç
    :param message:
    :param state:
    :param bot:
    :return:
    """
    logging.info(f'get_personal_account: {message.chat.id}')
    await message.answer(text=f'–£–∫–∞–∂–∏—Ç–µ –≤–∞—à –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞, –º–æ–∂–µ—Ç–µ –≤–æ—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è –∫–Ω–æ–ø–∫–æ–π'
                              f' "–ü–æ–¥–µ–ª–∏—Ç—å—Å—è ‚òéÔ∏è" —Ä–∞—Å–ø–æ–ª–æ–∂–µ–Ω–Ω–æ–π –Ω–∏–∂–µ üëá',
                         reply_markup=keyboards_get_contact())


async def get_phone_user(message: Message, state: FSMContext, bot: Bot) -> None:
    """
    –ü–æ–ª—É—á–∞–µ–º –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞ –ø—Ä–æ–≤–µ—Ä—è–µ–º –µ–≥–æ –Ω–∞ –≤–∞–ª–∏–¥–Ω–æ—Å—Ç—å –∏ –∑–∞–Ω–æ—Å–∏–º –µ–≥–æ –≤ –ë–î
    :param message:
    :param state:
    :param bot:
    :return:
    """
    logging.info(f'get_phone_user: {message.chat.id}')
    if message.contact:
        phone = str(message.contact.phone_number)
    else:
        phone = message.text
    if not validate_russian_phone_number(phone):
        await message.answer(text="–ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –Ω–æ–º–µ—Ä–∞, –ø–æ–≤—Ç–æ—Ä–∏—Ç–µ –≤–≤–æ–¥.")
        return
    else:
        return phone